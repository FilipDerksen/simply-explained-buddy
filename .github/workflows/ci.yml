name: CI - Test and Lint

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Build frontend
      run: npm run build
      
    - name: Test build output
      run: |
        if [ ! -d "dist" ]; then
          echo "Build failed - dist directory not found"
          exit 1
        fi
        echo "Build successful - dist directory created"

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Test backend server startup
      run: |
        cd backend
        timeout 10s npm start || echo "Server startup test completed"
        
    - name: Test backend health endpoint
      run: |
        cd backend
        npm start &
        sleep 5
        curl -f http://localhost:3001/health || exit 1
        pkill -f "node server.js"

  test-integration:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Start backend
      run: |
        cd backend
        npm start &
        sleep 5
        
    - name: Start frontend
      run: |
        npm run build
        npm run preview &
        sleep 5
        
    - name: Test API endpoint
      run: |
        curl -f http://localhost:3001/health
        curl -f http://localhost:4173
        
    - name: Cleanup
      run: |
        pkill -f "node server.js" || true
        pkill -f "vite preview" || true
